/* reset */

* {
  box-sizing: border-box;
  margin: 0;
}

/* 
  HTML and body by default have a height equal to the content within it 
*/
html {
  /* sets height of html document to the full height of viewport */
  block-size: 100%;
}

body {
  min-block-size: 100%;
  /* logical properties: block-start, block-end
     these adapt to a user and can be translated to another language as it follows their natural writing/document direction
     - logical properties define spacing regardless of direction or alignment
  */
  padding-block-start: var(--space-xs);
  padding-block-end: var(--space-xs);
}

/* 
  The system-ui keyword will use whatever the user's OS has decided
  is the optimal interface font 
*/
body {
  font-family: system-ui, sans-serif;
}

h1,
h2,
h3 {
  font-weight: 500;
}

small {
  line-height: 1.5;
}

:root {
  --space-xxs: 0.25rem;
  --space-xs: 0.5rem;
  --space-sm: 1rem;
  --space-md: 1.5rem;
  --space-lg: 2rem;
  --space-xl: 3rem;
  --space-xxl: 6rem;
}

main {
  display: grid;
  gap: var(--space-xl);
  place-content: center;
  padding: var(--space-sm);
}

section {
  display: grid;
  gap: var(--space-md);
}

header {
  display: grid;
  gap: var(--space-xxs);
}

svg {
  block-size: 2rem;
}

form {
  max-inline-size: 89vw; /* logical property */
  display: grid;
  gap: var(--space-xl) var(--space-xxl);
  align-items: flex-start;
  grid-template-columns: repeat(auto-fit, minmax(min(10ch, 100%), 35ch));
  /* keep columns 35ch wide and never less than 10ch, and put things into columns if there's room, otherwise rows are good. */
}

input {
  outline-offset: 5px;
}

fieldset {
  padding: 0;
  display: grid;
  gap: 1px; /* Instead of using borders - this is more concise */
  border-radius: var(--space-sm);
  overflow: hidden;
}

.fieldset-item {
  display: grid;
  grid-template-columns: var(--space-lg) 1fr;
  gap: var(--space-md);
  padding: var(--space-sm) var(--space-md);
}

@media (min-width: 540px) {
  .fieldset-item {
    grid-template-columns: var(--space-xxl) 1fr;
    gap: var(--space-xs);
    padding-block: var(--space-md);
    padding-inline: 0 var(--space-xl);
  }
}

.fieldset-item > picture {
  display: inline-grid;
  place-content: center;
  /* From here...these create a circle around the icon and allows for animations */
  block-size: var(--space-xl); /* height */
  inline-size: var(--space-xl); /* width  */
  clip-path: circle(50%); /* clipping */
}

.fieldset-item > :is(picture, input[type="checkbox"]) {
  place-self: center;
}

.fieldset-item svg {
  block-size: var(--space-md); /* sets the size of the svg icon */
}

.sm-stack {
  display: grid;
  gap: var(--space-xs);
}

/* increasing size of checkbox */
input[type="checkbox"] {
  inline-size: var(--space-sm);
  block-size: var(--space-sm);
}

/* Media queries */
@media (min-width: 540px) {
  main {
    padding: var(--space-lg);
  }
}

@media (min-width: 800px) {
  main {
    padding: var(--space-xl);
  }
}

form {
  --repeat: auto-fit;
  grid-template-columns: repeat(var(--repeat), minmax(min(10ch, 100%), 35ch));
}

@media (orientation: landscape) and (min-width: 640px) {
  form {
    --repeat: 2;
  }
}
